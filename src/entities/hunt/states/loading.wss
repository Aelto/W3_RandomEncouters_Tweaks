
state Loading in RandomEncountersReworkedHuntEntity {
  event OnEnterState(previous_state_name: name) {
    super.OnEnterState(previous_state_name);

    NLOG("RandomEncountersReworkedHuntEntity - State Loading");
    this.Loading_main();
  }

  entry function Loading_main() {
    var template: CEntityTemplate;
    var tracks_templates: array<RER_TrailMakerTrack>;

    template = LoadResourceAsync("characters\npc_entities\animals\hare.w2ent", true) as CEntityTemplate;

    parent.bait_entity = theGame.CreateEntity(
      template,
      parent.GetWorldPosition(),
      parent.GetWorldRotation()
    );

    (parent.bait_entity as CNewNPC).SetGameplayVisibility(false);
    (parent.bait_entity as CNewNPC).SetVisibility(false);
    (parent.bait_entity as CActor).EnableCharacterCollisions(false);
    (parent.bait_entity as CActor).EnableDynamicCollisions(false);
    (parent.bait_entity as CActor).EnableStaticCollisions(false);
    (parent.bait_entity as CActor).SetImmortalityMode(AIM_Immortal, AIC_Default);
    (parent.bait_entity as CActor).AddBuffImmunity_AllNegative('RandomEncountersReworked', false);

    tracks_templates.PushBack(getTracksTemplateByCreatureType(parent.bestiary_entry.type));

    #ifdef ENABLE_TRAIL_MAKER {
      parent.trail_maker = new RER_TrailMaker in parent;
      parent.trail_maker.init(
        parent.master.settings.foottracks_ratio,
        200,
        tracks_templates
      );

      // to calculate the initial position we go from the
      // monsters position and use the inverse tracks_heading to
      // cross ThePlayer's path.
      parent.trail_maker
        .drawTrail(
          VecInterpolate(
            parent.GetWorldPosition(),
            thePlayer.GetWorldPosition(),
            1.3
          ),

          parent.GetWorldPosition(),
          20,,,
          true,
          parent.master.settings.use_pathfinding_for_trails
        );
    };

    parent.GotoState('Wandering');
  }

  
}
