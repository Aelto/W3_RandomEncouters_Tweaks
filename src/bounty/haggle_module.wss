
class RER_BountyModuleDialog extends CR4HudModuleDialog {

  var bounty_master_manager: RER_BountyMasterManager;
  
  function DialogueSliderDataPopupResult(value: float, optional isItemReward: bool) {
    super.DialogueSliderDataPopupResult(0,false);

    this.bounty_master_manager.bountySeedSelected(value as int);
  }

  function openSeedSelectorWindow(bounty_master_manager: RER_BountyMasterManager) {
    var data: RER_SeedSelectorBettingSliderData;
    var bounty_level: int;

    this.bounty_master_manager = bounty_master_manager;

    bounty_level = bounty_master_manager
      .bounty_manager
      .getTotalBountyLevel();

    data = new RER_SeedSelectorBettingSliderData in this;
    data.bounty_master_manager = bounty_master_manager;
    data.ScreenPosX = 0.62;
    data.ScreenPosY = 0.65;

    data.SetMessageTitle( GetLocStringByKey("panel_hud_dialogue_title_bet_rer"));
    data.dialogueRef = this;
    data.BlurBackground = false;

    data.minValue = 0;
    data.maxValue = bounty_master_manager.bounty_manager.getSeedBountyLevelStep() * bounty_level;
    data.currentValue = 0;

    theGame.RequestMenu('PopupMenu', data);
  }

  
}

class RER_SeedSelectorBettingSliderData extends BettingSliderData {
  var bounty_master_manager: RER_BountyMasterManager;

  public function GetGFxData(parentFlashValueStorage: CScriptedFlashValueStorage): CScriptedFlashObject {
    var l_flashObject: CScriptedFlashObject;

    l_flashObject = super.GetGFxData(parentFlashValueStorage);
     l_flashObject.SetMemberFlashInt(
      "playerMoney",
      bounty_master_manager.bounty_manager.getMaximumSeed()
    );
    l_flashObject.SetMemberFlashBool("displayMoneyIcon", false);

    return l_flashObject;
  }

  public function  OnUserFeedback(KeyCode:string): void {
    if (KeyCode == "enter-gamepad_A") {
      dialogueRef.DialogueSliderDataPopupResult( currentValue );
      ClosePopup();
    }
  }
}
